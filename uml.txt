@startuml
Joueur --* Plateau : joueur1
Joueur --* Plateau : joueur2
Partie --* Plateau : partie
Analyse --* Plateau : analyse
Affichage --* Plateau : affichage
EcrireFichier --* Plateau : ef
Humain --|> Joueur
IA --|> Joueur
Partie --* Analyse : partie
EcrireFichier --* Partie : ef
Partie --* Affichage : partie
EcrireFichier --* Entree : ef

IA : IA(String nom, int motif)
IA : int jouerTour(Partie partie, EcrireFichier ef, Random aleatoire)

Humain : Humain(String nom, int motif)
Humain : int jouerTour(Partie partie, EcrireFichier ef, Random aleatoire)

Joueur : String nom
Joueur : int motif
Joueur : int numeroJoueur
Joueur : int score
Joueur : Joueur(String nom, int motif)
Joueur : String getNom()
Joueur : int getMotif()
Joueur : int getNumeroJoueur()
Joueur : int getScore()
Joueur : int incScore()
Joueur : int jouerTour(Partie partie, EcrireFichier ef, Random aleatoire)

Plateau : int nbrManches
Plateau : int manchesJouees
Plateau : Plateau(Joueur joueur1, Joueur joueur2, Partie partie, Analyse analyse, Affichage affichage, int nbrManches, EcrireFichier ef)
Plateau : void jouer(Random aleatoire, int joueurQuiCommence)
Plateau : private int joueurUnCommence(Random aleatoire)
Plateau : private int joueurDeuxCommence(Random aleatoire)

Partie : int vide = 0
Partie : int x = 1
Partie : int o = 2
Partie : int grilleLigne
Partie : int grilleColonne
Partie : int[][] grille
Partie : Partie(EcrireFicher ef)
Partie : void creerGrille(int ligne, int colonne)
Partie : char getMotifAffichage(int motif)
Partie : int[][] getGrille()
Partie : int getGrilleLigne()
Partie : int getGrilleCol()
Partie : void setGrilleLigne(int grilleLigne)
Partie : void setGrilleCol(int grilleCol)
Partie : int setCaseGrille(int colonne, int motif, Analyse analyse)
Partie : void reinitGrille()
Partie : public static void main(String[] args)

Analyse : Analyse(Partie partie)
Analyse : boolean cherche()
Analyse : boolean chercheAlignes(int debutX, int debutY, int pasX, int pasY)
Analyse : int caseDisponible(int y)
Analyse : boolean estPlein()

Affichage : Affichage(Partie partie)
Affichage : void afficherGrille()

EcrireFichier : File log
EcrireFichier : FileWriter ecrivain
EcrireFichier : EcrireFichier()
EcrireFichier : void ecrireNom(int numeroJoueur, String nom)
EcrireFichier : void ecrireManche()
EcrireFichier : void ecrirePartieFinie()
EcrireFichier : void ecrireActions(int numero, int colonne)
EcrireFichier : void ecrireMancheTransition(int score1, int score2, int numero, int pointsMax)
EcrireFichier : void ecrireErreurSaisie(String type, String numero)
EcrireFichier : void ecrireErreurColonne(String type, String numero)

Entree : String nom
Entree : String type
Entree : Entree(EcrireFichier ef)
Entree : void initialiserJeu(int i)
Entree : String getJoueurNom()
Entree : String getJoueurType()
Entree : void setJoueurNom(String nom)
Entree : void setJoueurType(String type)
@enduml
